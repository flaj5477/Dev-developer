<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProjectsDAO">
	
	<!-- 전체조회 -->
	<select id="getProjectsList" parameterType="projects" resultType="projects">
	SELECT b.* FROM ( SELECT rownum no, a.* FROM (
		select 	proj_no, 
				members_no, 
				proj_title, 
				proj_reg_date, 
				proj_due_date
		from projects 
		<where>
			<if test="searchVal != null and searchVal != '' "> 
					AND PROJ_TITLE LIKE '%' || #{searchVal} || '%'
			</if>
		</where>
		<choose>	
			<when test="orderby != null and orderby != '' ">	<!--  '' 체크해줘야됨 -->
				ORDER BY ${orderby} DESC
			</when>
			<otherwise>
				ORDER BY proj_no DESC
			</otherwise>
		</choose>
	 ) a ) b WHERE no BETWEEN #{first} AND #{last}      
	</select>
	
	<!-- 상세조회 -->
	<select id="getProjects" resultType="projects">
		select 	p.proj_no,
				p.members_no,
				p.proj_title,
				p.proj_contents,
				p.proj_reg_date,
				p.proj_due_date,
				p.proj_require,
				p.proj_members_cnt,
				p.proj_type,
				p.proj_price,
				p.proj_tags,
				p.proj_start_date,
				p.proj_end_date,
        		m.members_name
		from projects p join members m
    	on p.members_no = m.members_no
		where proj_no = #{projNo}
	</select>
	
	<!-- 지원 전 중복검사 -->
	<select id="applyDuplicationInspect" resultType="int">
		select count(*) 
		from proj_applicants 
		where members_no = #{membersNo}
		and proj_no=#{projNo}
	</select>
	
	<!-- 지원 전 등급검사 -->
	<select id="projRequireInspect" resultType="int">
		select count(*) 
		from members 
		where members_no=#{membersNo} 
		and MEMBERS_GRADE >= (	select PROJ_REQUIRE 
								from projects 
								where proj_no=#{projNo}	)
	</select>
	
	<!-- 지원하기 -->
	<insert id="applyProjects" parameterType="projApplicants" >
		<selectKey keyProperty="applyNo" resultType="int" order="BEFORE">
			select max(apply_no) +1 from proj_applicants
		</selectKey>
		
		insert into proj_applicants( 	apply_no, 
										members_no, 
										proj_no, 
										status, 
										participant_name, 
										email, 
										phone_no, 
										address, 
										cover_letter) 
		values (#{applyNo}, 
				#{membersNo}, 
				#{projNo}, 
				'지원', 
				#{participantName}, 
				#{email}, 
				#{phoneNo}, 
				#{address}, 
				#{coverLetter})
	</insert>
	
	
	<!-- 전체 프로젝트 공고 갯수 (페이징)-->
	<select id="getCountProj" parameterType="projects" resultType="int">
		select count(*) as "getCountProj"
		from projects
		<where>
			<if test="searchVal != null and searchVal != '' "> 
					AND PROJ_TITLE LIKE '%' || #{searchVal} || '%'
			</if>
		</where>
	</select>
	
	<!-- 프로젝트 입력 -->
	<insert id="insertProject" parameterType="projects">
		insert into projects
		values ( (select max(proj_no)+1 from projects) ,
            #{membersNo}, 
            #{projTitle}, 
            #{projContents}, 
            sysdate, 
            #{projDueDate}, 
            #{projRequire},
            #{projMembersCnt},
            #{projType}, 
            #{projPrice}, 
            'url', 
            #{projTags}, 
            #{projStartDate}, 
            #{projEndDate}	)
	</insert>
	
	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject">
		delete projects where proj_no=#{projNo}
	</delete>
</mapper>