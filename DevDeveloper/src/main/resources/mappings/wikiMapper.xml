<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="WikiDAO">
	
	<!-- 
		곽동우
		191022
		위키등록	
	 -->
	 <insert id="insertWiki" parameterType="wiki">	<!-- id sql구문 구분용 -->
		<selectKey keyProperty="manualNo" resultType="int" order="BEFORE">  <!-- seq에담는다 타입은 int -->
			select NVL(max(MANUAL_NO),0)+1 from wiki_guide
		</selectKey>
		insert into wiki_guide(MANUAL_NO, MANUAL_CONTENTS_PATH, MANUAL_ORI_URL, MANUAL_TAGS, MANUAL_TITLE, MANUAL_TOTALLINE) 
		values( #{manualNo}, #{manualContentsPath} ,#{manualOriUrl} ,#{manualTags} ,#{manualTitle} ,#{manualTotalline} )
		<!-- values( #{manualNo}, #{manualContentsPath} ,#{manualOriUrl} ,#{manualTags} ,#{manualTitle} ) -->
	</insert>
	
	<!-- 	
	<insert id="insertBoardProc" statementType="CALLABLE" parameterType="board">
		{call board_ins_proc( #{title},
							  #{writer},
							  #{content},
							  #{seq, mode=OUT, jdbcType=NUMERIC, javaType=java.lang.Integer},
							  #{msg, mode=OUT, jdbcType=VARCHAR, javaType=string}  )  }	call 프로시저명(?,?,?) ???순서대로 | 프로시저명 대소문자구분 x
		
	</insert>
	 -->
	
	
	<!-- 단건조회 -->
	<select id="getWiki" parameterType = "wiki" resultType="wiki">
		select * from wiki_guide where manual_no = #{manualNo}
	</select>
	
	
	<!-- 20191021 곽동우 -->
	<!-- 위키조회맵 -->
	<select id="getWikiMap" parameterType="wiki" resultType="Map">
		SELECT b.* FROM ( SELECT rownum no, a.* FROM (
				SELECT 	MANUAL_NO				as		"manualNo",
						MANUAL_CONTENTS_PATH	as		"manualContentsPath",
						MANUAL_ORI_URL			as		"manualOriUrl",
						MANUAL_TAGS				as		"manualTags",
						MANUAL_TITLE			as 		"manualTitle",
						MANUAL_TOTALLINE		as		"manualTotalline"
				FROM wiki_guide
				<!-- 
				<![CDATA[ 
				WHERE 	1=1 		
				]]>
				 -->
				<where>
						<!-- <if test="manualTitle != null and manualTitle != '' ">
							AND MANUAL_TITLE LIKE '%' || #{manualTitle} || '%'
						</if>
				
				
						<if test="manualTags != null and manualTags != '' ">
							AND MANUAL_TAGS LIKE '%' || #{manualTags} || '%'
						</if> -->
						
						
						<if test="searchVal != null and searchVal != '' "> 
							<!-- <if test="manualTitle != null and manualTitle != '' ">
								AND MANUAL_TITLE LIKE '%' || #{manualTitle} || '%'
							</if> -->
							<if test="select == 'title'">
								AND MANUAL_TITLE LIKE '%' || #{searchVal} || '%'
							</if>
							<if test="select == 'tags'">
								AND NVL(MANUAL_TAGS, '기타') LIKE '%' || #{searchVal} || '%'
							</if>
						</if>
				</where>
				
				<choose>	
					<when test="orderby != null and orderby != '' ">	<!--  '' 체크해줘야됨 -->
						ORDER BY ${orderby} DESC
					</when>
					<otherwise>
						ORDER BY MANUAL_NO DESC
					</otherwise>
				</choose>
		) a ) b WHERE no BETWEEN #{first} AND #{last}
	</select>
	
	
	<!-- 곽동우
		 위키번역률확인
		 20191108
	 -->
	<select id="getTransCount" parameterType="int" resultType="int">
		SELECT count(count(manual_no))              
		FROM wiki_guide_trans
		WHERE manual_no = #{manualNo}
		GROUP BY manual_line
	</select>
	
	<!-- 
		곽동우
		위키수정
		20191024
	 -->
	 <update id="updateWiki" parameterType="wiki">
		update wiki_guide set
					MANUAL_TITLE = #{manualTitle},
					MANUAL_ORI_URL = #{manualOriUrl},
					MANUAL_TAGS	= #{manualTags},
					MANUAL_CONTENTS_PATH = #{manualContentsPath}
		where manual_no = #{manualNo}
	 </update>
	 
	 
	 
	 <!-- 
	 	파일위치조회
	 	곽동우
	 	191024 
	 -->
	<select id="getWikiContentsPath" parameterType = "wiki" resultType="wiki">
		select MANUAL_CONTENTS_PATH as "manualContentsPath" from wiki_guide where manual_no = #{manualNo}
	</select>
	
	<!-- 
		위키 전체수 가져오기(페이징)
	 -->
	 <select id="getCountWiki" parameterType="wiki" resultType="int">
		select count(*)  as  "getCountWiki" 
		from wiki_guide
		<where>
			<if test="searchVal != null and searchVal != '' "> 
				<!-- <if test="manualTitle != null and manualTitle != '' ">
					AND MANUAL_TITLE LIKE '%' || #{manualTitle} || '%'
				</if> -->
				<if test="select == 'title'">
					AND MANUAL_TITLE LIKE '%' || #{searchVal} || '%'
				</if>
				<if test="select == 'tags'">
					AND NVL(MANUAL_TAGS, '기타') LIKE '%' || #{searchVal} || '%'
				</if>
			</if>
		</where>
	 </select>
	 
	 <!-- 
	 	위키삭제
	  -->
	  <delete id="deleteWiki" parameterType="wiki">
	  	delete WIKI_GUIDE
	  	where MANUAL_NO = ${manualNo}
	  	
	  </delete>
	  
	  
	  
	  
	  <!-- 
		곽동우
		191031
		위키번역 등록	
	 -->
	 <insert id="insertWikiTrans" parameterType="wikiTrans">
		<selectKey keyProperty="transNo" resultType="int" order="BEFORE">  <!-- seq에담는다 타입은 int -->
			select NVL(max(TRANS_NO),0)+1 from WIKI_GUIDE_TRANS
		</selectKey>
		insert into WIKI_GUIDE_TRANS (TRANS_NO, MANUAL_LINE, MANUAL_BEFORE, MANUAL_AFTER, TRANS_DATE, MANUAL_NO, MEMBERS_NO)
								VALUES (#{transNo}, #{manualLine}, #{manualBefore}, #{manualAfter}, SYSDATE, #{manualNo}, #{membersNo})
		<!-- values( #{manualNo}, #{manualContentsPath} ,#{manualOriUrl} ,#{manualTags} ,#{manualTitle} ) -->
	</insert>
	
	
	<!-- 
		곽동우
		20191101
		위키번역(라인별) 들고오기
	 -->
	 <select id="getWikiTransLine" parameterType="wikiTrans" resultType="Map">
		<!-- SELECT b.* FROM ( SELECT rownum no, a.* FROM ( -->
				
				
				SELECT 	TRANS_NO			as		"transNo",
						MANUAL_LINE			as		"manualLine",
						MANUAL_BEFORE		as		"manualBefore",
						MANUAL_AFTER		as		"manualAfter",
						TO_CHAR(TRANS_DATE,'YYYY-MM-DD hh:MI:ss')	as 		"translDate",
						MANUAL_NO			as 		"manualNo",
						MEMBERS_NO			as 		"membersNo"
						
				FROM wiki_guide_trans
				<where>
						AND MANUAL_NO = #{manualNo}
						<if test="manualLine != null and manualLine gte 0"><!--  문자열 숫자 비교 다름 -->
								AND MANUAL_LINE = #{manualLine}
						</if>
				</where>
				
				<choose>	
					<when test="orderby != null and orderby != '' ">	 <!-- '' 체크해줘야됨 -->
						ORDER BY ${orderby} DESC
					</when>
					<otherwise>
						ORDER BY MANUAL_LINE DESC
					</otherwise>
				</choose>
				
				
				
		
			<!--  SELECT   distinct(a.TRANS_NO)						as		"transNo",
				      a.MANUAL_LINE								as		"manualLine",
				      a.MANUAL_BEFORE							as		"manualBefore",
				      a.MANUAL_AFTER							as		"manualAfter",
				      TO_CHAR(a.TRANS_DATE,'YYYY-MM-DD hh:MI:ss')	as 		"translDate",
				      a.MANUAL_NO								as 		"manualNo",
				      a.MEMBERS_NO								as 		"membersNo",
				      b.myTrans 								as 		"myTrans"
			 FROM wiki_guide_trans a  , (select trans_no, members_no, 'V' as myTrans from WIKI_TRANS_REC where MEMBERS_NO = 1 ) b
		     WHERE MANUAL_NO = #{manualNo}
		     AND MANUAL_LINE = #{manualLine}
		     AND a.trans_no = b.trans_no(+)
		     order by a.trans_no -->
		     
		     
		     <!-- 
		) a ) b WHERE no BETWEEN #{first} AND #{last} -->
	</select>
	 
	 <!-- 
	 	곽동우
	 	20191105
	 	게시글 위키번역(게시글 전체라인) 들고오기
	  -->
	 <select id="getWikiTrans" parameterType="wiki" resultType="Map">
			SELECT 	a.TRANS_NO									as		"transNo",
			        a.MANUAL_LINE								as		"manualLine",
			        a.MANUAL_BEFORE								as		"manualBefore",
			        a.MANUAL_AFTER								as		"manualAfter",
			        TO_CHAR(a.TRANS_DATE,'YYYY-MM-DD hh:mm:ss')	as 		"translDate",
			        a.MANUAL_NO									as 		"manualNo",
			        a.MEMBERS_NO								as 		"membersNo"
									
			FROM WIKI_GUIDE_TRANS a, (select MANUAL_NO, MANUAL_LINE, max(trans_date) as trans_date
			                          from WIKI_GUIDE_TRANS
			                          group by MANUAL_LINE, MANUAL_NO 
			                          having MANUAL_NO = #{manualNo} ) b
			where a.MANUAL_NO = b.MANUAL_NO and a.MANUAL_LINE = b.MANUAL_LINE and a.trans_date = b.trans_date
			order by a.MANUAL_LINE

	 </select>
	 
	 <!-- 
	 	곽동우
	 	20191108
	 	위키 번역 삭제
	  -->
	<delete id="delWikiTrans" parameterType="int">
			DELETE FROM WIKI_GUIDE_TRANS 
			WHERE TRANS_NO = #{transNo}
	</delete>	 
	 
	 <!-- 
	 	곽동우
	 	20191105
	 	태그별 위키 갯수
	  -->
	  <select id="getWikiTagList" parameterType="wikiTag" resultType="Map">
	  		<!-- SELECT 	NVL(MANUAL_TAGS, '기타') 		as manualTags , 
	  				COUNT(nvl(MANUAL_TAGS, '기타'))  as countTag
			FROM WIKI_GUIDE
			GROUP BY MANUAL_TAGS
			ORDER BY countTag DESC -->
			select a.TAGS_NO 		as "tagsNo", 
				   a.TAGS_TITLE		as "tagsTitle", 
				   a.TAGS_CONTENTS	as "tagsContents", 
				   b.manualTags		as "manualTags", 
				   b.countTags		as "countTags"
			from tags a right join (SELECT NVL(MANUAL_TAGS, '기타') as manualTags , COUNT(nvl(MANUAL_TAGS, '기타')) as countTags
					                  FROM WIKI_GUIDE
					                  GROUP BY MANUAL_TAGS
					                  ORDER BY countTags DESC) b
			on a.TAGS_TITLE = b.manualTags
			order by UPPER(b.manualTags)
	  </select>
	  
	  <!-- 
	  	곽동우
	  	20191108
	  	멤버아이디 받아오기
	   -->
	   <select id="getMemberId" parameterType="int" resultType="String">
	   		SELECT members_id
			FROM members
			WHERE members_no = #{no}
	   </select>
	   
	   <!-- 
	   	 20191112
	   	 위키번역 추천
	    -->
	    <insert id="wikiTransRec" parameterType="wikiRec" >
	    	INSERT INTO wiki_trans_rec (manual_no, trans_no, members_no)
   			values(#{manualNo}, #{transNo}, #{membersNo})
	    </insert>
</mapper>