<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FilesDAO">

	<select id="getFilesList" resultType="files">
		SELECT B.* FROM ( SELECT A.*,ROWNUM RN FROM(
		select files_no,
		proj_no,
		files_title,
		files_comment,
		members_no,
		files_group_no,
		files_upload_date,
		files_type,
		upper_folder,
		files_size,
		files_Import,
		files_Trash
		from
		files
		where 1=1
		<choose>
			<when test="upperFolder == null or upperFolder ==''">
				and upper_folder = files_no
				and proj_no = #{projNo}
			</when>
			<otherwise>
			 <![CDATA[
				 and upper_folder <> files_no
				and upper_folder = #{upperFolder}
			]]>
			</otherwise>
		</choose>
		order by files_no
		)A)B WHERE RN between #{first} and #{last}
	</select>

	<!-- filesinsert(upload) -->
	<insert id="filesInsertProc" statementType="CALLABLE" parameterType="files">
		{call FILES_UPLOAD		(#{projNo},
								 #{membersNo},
								 #{filesTitle},
								 #{filesComment},
								 #{filesPath} )}						
	</insert>
		
	<select id="getImportList" parameterType="files"
		resultType="files">
		select files_no,
		files_title,
		files_comment,
		members_no,
		files_group_no,
		files_upload_date,
		upper_folder,
		files_type,
		files_Import,
		files_Trash
		from
		files
		where files_Import='Y'
	</select>

	<select id="getCountFiles" parameterType="files"
		resultType="int">
		select count(*) as "getCountFiles"
		from files
		<where>
			<if test="searchVal != null and searchVal != '' ">
				<if test="select == 'title'">
					AND FILES_NO LIKE '%' || #{searchVal} || '%'
				</if>
				<if test="select == 'usersNo'">
					AND MANUAL_TAGS LIKE '%' || #{searchVal} || '%'
				</if>
			</if>
		</where>
	</select>

	<update id="filesImport" parameterType="files">
		update files
		set
		files_import = 'Y'
		where files_no=${filesNo}
	</update>

	<update id="getFilesTrash" parameterType="files">
		update files
		set
		files_Trash = 'Y'
		where files_no=${filesNo}
	</update>

	<select id="getFiles" resultType="files">
		select f.files_no,
		f.files_title,
		f.files_comment,
		m.members_no,
		f.files_upload_date,
		f.files_size
		from files f join members m
		on f.members_no = m.members_no
		where files_no = #{filesNo}
	</select>

</mapper>